package com.harlansoft.microservices.currencyexchangeservice.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import com.harlansoft.microservices.currencyexchangeservice.model.ExchangeValue;
import com.harlansoft.microservices.currencyexchangeservice.repository.ExchangeValueRepository;
import com.harlansoft.microservices.currencyexchangeservice.services.bean.ExchangeValueResponse;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@RestController
public class CurrencyExchangeController {
	
	@Autowired
	private ExchangeValueRepository repository;
	
	@Autowired
	private Environment environment;
	
	@GetMapping("/currency-exchange/from/{from}/to/{to}")
	public ExchangeValueResponse retrieveExchangeValue(@PathVariable final String from,
			@PathVariable final String to) {
		
		ExchangeValue exchangeValue = repository.findByFromAndTo(from, to);
		
//		this will also show the correlation id generated by Sleuth-Brave
		log.info("{}", exchangeValue); 
		
		return new ExchangeValueResponse(exchangeValue,
				Integer.parseInt(environment.getProperty("local.server.port")));
		
	}

}
